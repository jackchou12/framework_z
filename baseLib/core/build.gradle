apply from: "${rootProject.rootDir}/config.gradle"
apply plugin: 'com.android.library'
//apply plugin: 'me.tatarka.retrolambda'  //lambda配置
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions' //启用扩展支持直接使用ID


android {

    project.ext.setDefaultConfig project
    defaultConfig {

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }

    //解决.9图问题
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

}
//项目依赖
dependencies {
    //解决support包版本号不统一问题.
//    configurations {
//        all*.exclude group: 'com.android.support', module: 'support-v13'
//        all*.exclude group: 'com.android.support', module: 'support-v4'
//    }
    // 在项目中的libs中的所有的.jar结尾的文件，都是依赖
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //组件:把implementation 用api代替,它是对外部公开的, 所有其他的module就不需要添加该依赖
    api "com.android.support:appcompat-v7:$rootProject.androidSupportSdkVersion"
    api "com.android.support.constraint:constraint-layout:$rootProject.constraintLayout"
    api "com.android.support:cardview-v7:$rootProject.androidSupportSdkVersion"
    api "com.android.support:recyclerview-v7:$rootProject.androidSupportSdkVersion"
    api "com.android.support:support-v4:$rootProject.androidSupportSdkVersion"
    api "com.android.support:design:$rootProject.androidSupportSdkVersion"
    api "com.android.support:support-annotations:$rootProject.annotations"

    //test
    testImplementation "junit:junit:$rootProject.junit"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.testEspressoCore"
     //MultiDex分包方法
    api "com.android.support:multidex:$rootProject.multidex"
    //leakcanary-android
    debugApi "com.squareup.leakcanary:leakcanary-android:1.5.1"
    //release不检测
    releaseApi "com.squareup.leakcanary:leakcanary-android-no-op:1.5.1"
    //网络
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    api "io.reactivex.rxjava2:rxandroid:2.0.1"
    api "io.reactivex.rxjava2:rxjava:2.1.5"
    api "com.squareup.okhttp3:logging-interceptor:3.4.1"
    //日志
    api "com.orhanobut:logger:2.1.1"

    //安卓调试神器-Stetho
    api "com.facebook.stetho:stetho:1.5.0"
    api "com.facebook.stetho:stetho-okhttp3:1.5.0"

    //黄油刀
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    api "com.jakewharton:butterknife:$rootProject.butterknifeVersion"

    //kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"
    api "org.jetbrains.kotlin:kotlin-reflect:$rootProject.kotlin_version"
    //推送
    api project(':baseLib:push')
    //libs
    implementation files('libs/sun.misc.BASE64Decoder.jar')

}

//解决支持库版本不兼容问题
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}
